/** Shaderdefinition
 *
 * group DEFAULT
 *  vs VSMain vs_5_0 OptimizationLevel3
 *  ps PSMain ps_5_0 OptimizationLevel3
 */

Texture2D g_Texture : register(t0);
SamplerState g_Sampler : register(s0);

cbuffer PerFrame : register(b0)
{
	float4x4 g_WorldViewProjectionMatrix;
};

struct VS_INPUT
{
	float4 p  : SV_POSITION0;
	float4 c  : COLOR0;
    float  m  : TEXCOORD1;
};

struct PS_INPUT
{
	float4 p  : SV_POSITION0;
	float4 c  : COLOR0;
    float2 uv : TEXCOORD0;
    float  m  : TEXCOORD1;
};

PS_INPUT VSMain(VS_INPUT input)
{
	PS_INPUT output;
    output.uv = input.p.wz;
    output.p = mul(float4(input.p.xy, 0.0f, 1.0f), g_WorldViewProjectionMatrix);
	output.c = input.c / 255.0f;
    output.m = input.m;
	return output;
}

float4 PSMain(PS_INPUT input) : SV_TARGET
{
    //discard;
    //clip(-1);
    switch (input.m)
    {
        default:
        case 0: // texture mode
            return input.c;
        case 1: // color mode
            return g_Texture.Sample(g_Sampler, input.uv) * input.c;
    }
}

